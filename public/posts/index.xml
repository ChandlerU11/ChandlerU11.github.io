<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Chandler Underwood</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on Chandler Underwood</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 29 Aug 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Imbalanced Product Review Sentiment Classification</title>
      <link>http://localhost:1313/posts/review_classifier/</link>
      <pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/review_classifier/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;script async src=&#34;https://www.googletagmanager.com/gtag/js?id=G-0NTZD30YVX&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;  window.dataLayer = window.dataLayer || [];&#xA;  function gtag(){dataLayer.push(arguments);}&#xA;  gtag(&#39;js&#39;, new Date());&#xA;&#xA;  gtag(&#39;config&#39;, &#39;G-0NTZD30YVX&#39;);&#xA;&lt;/script&gt;&#xA;&lt;/head&gt;&#xA;&lt;/html&gt;&#xA;&#xA;&lt;h2 id=&#34;class-imbalance-and-problem-statement&#34;&gt;Class Imbalance and Problem Statement&lt;/h2&gt;&#xA;&lt;p&gt;Class imbalance is a common problem when building classifiers in the machine learning world, and our awesome previously-scraped &lt;a href=&#34;http://localhost:1313/posts/review_scrape/&#34;&gt;croc reviews data&lt;/a&gt; is unfortunately not so awesome from a class balance standpoint. Soon, we&amp;rsquo;ll assign binary class labels based on the rating a customer gave with their review where we&amp;rsquo;ll consider ratings of 2 stars (out of 5) or less to be negative sentiment and the remaining reviews as positive sentiment. As you&amp;rsquo;ll see in a moment, the vast majority of reviews belong to the positive sentiment class, and I think that&amp;rsquo;s great!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running Data Dashboard</title>
      <link>http://localhost:1313/posts/tableau_viz/</link>
      <pubDate>Wed, 14 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/tableau_viz/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;script async src=&#34;https://www.googletagmanager.com/gtag/js?id=G-0NTZD30YVX&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;  window.dataLayer = window.dataLayer || [];&#xA;  function gtag(){dataLayer.push(arguments);}&#xA;  gtag(&#39;js&#39;, new Date());&#xA;&#xA;  gtag(&#39;config&#39;, &#39;G-0NTZD30YVX&#39;);&#xA;&lt;/script&gt;&#xA;&lt;/head&gt;&#xA;&lt;/html&gt;&#xA;&#xA;&lt;h1 id=&#34;about&#34;&gt;About&lt;/h1&gt;&#xA;&lt;p&gt;This post contains the dashboard I built to go along with my &lt;a href=&#34;http://localhost:1313/posts/clean_data/&#34;&gt;data cleaning project&lt;/a&gt; where I clean up my own running data from college. Shoutout to Andy Kriebel and his awesome YouTube &lt;a href=&#34;https://www.youtube.com/watch?v=EZMLjMaZYSs&amp;t=308s&#34;&gt;video&lt;/a&gt; for getting me started!&lt;/p&gt;&#xA;&lt;p&gt;The dashboard allows for dynamic exploration of the time series data from years down to days. I would recommend opening up the visualization to full screen, so you can see the &amp;ldquo;timeframe snapshots&amp;rdquo; along with my most important running stats.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Unsupervised ML to &#39;Typicalize&#39; Product Reviews</title>
      <link>http://localhost:1313/posts/review_generizer/</link>
      <pubDate>Wed, 10 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/review_generizer/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;script async src=&#34;https://www.googletagmanager.com/gtag/js?id=G-0NTZD30YVX&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;  window.dataLayer = window.dataLayer || [];&#xA;  function gtag(){dataLayer.push(arguments);}&#xA;  gtag(&#39;js&#39;, new Date());&#xA;&#xA;  gtag(&#39;config&#39;, &#39;G-0NTZD30YVX&#39;);&#xA;&lt;/script&gt;&#xA;&lt;/head&gt;&#xA;&lt;/html&gt;&#xA;&#xA;&lt;h1 id=&#34;motivation&#34;&gt;Motivation&lt;/h1&gt;&#xA;&lt;p&gt;In my &lt;a href=&#34;http://localhost:1313/posts/review_scrape/&#34;&gt;last post&lt;/a&gt; where I scraped reviews for Crocs Clogs, I mentioned that I often find myself wishing for a succinct summary of the reviews for a product. Let&amp;rsquo;s flesh that out a bit more. What I mean when I say &amp;ldquo;succinct summary&amp;rdquo; is that I want a quick understanding of a specific aspect for a given product. For example, I know that crocs come in amazing colors already. I can see that in the photos. But, how do they fit? What about their comfort? I find myself often most concerned with a specific aspect of a product such as those. I want to know what people are typically saying about fit and comfort. Many retailers offer a search bar for reviews, so you can filter reviews on a keyword. BUT, searching for &amp;ldquo;fit&amp;rdquo; across all crocs reviews would return a ton of samples, and how can we know which ones are representative of the general sentiment people have in regards to fit? What if we could give consumers a snapshot of the reviews containing a word or phrase they search for? Could we show them a small set of reviews that best represent all the reviews that mention the word &amp;ldquo;fit&amp;rdquo;, for example? I think we can!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building a Product Reviews Webscraper</title>
      <link>http://localhost:1313/posts/review_scrape/</link>
      <pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/review_scrape/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;script async src=&#34;https://www.googletagmanager.com/gtag/js?id=G-0NTZD30YVX&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;  window.dataLayer = window.dataLayer || [];&#xA;  function gtag(){dataLayer.push(arguments);}&#xA;  gtag(&#39;js&#39;, new Date());&#xA;&#xA;  gtag(&#39;config&#39;, &#39;G-0NTZD30YVX&#39;);&#xA;&lt;/script&gt;&#xA;&lt;/head&gt;&#xA;&lt;/html&gt;&#xA;&#xA;&lt;h1 id=&#34;motivation&#34;&gt;Motivation&lt;/h1&gt;&#xA;&lt;p&gt;Before we get into things, here&amp;rsquo;s a &lt;a href=&#34;https://www.kaggle.com/datasets/chandlerunderwood/crocs-clog-reviews/data&#34;&gt;link&lt;/a&gt; to download the dataset if you would like.&lt;/p&gt;&#xA;&lt;p&gt;Do you ever find yourself pouring over a product&amp;rsquo;s reviews trying to decide if it&amp;rsquo;s right for you? I sure do. Many of these times I&amp;rsquo;ve wished there was a quick summary of the reviews I could read to speed up the decision process. I&amp;rsquo;ve yet to see any online retailers doing exactly what I&amp;rsquo;m looking for, so I&amp;rsquo;ve decided to make my own review summarizer. But, we need some data for training such a tool.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cleaning Up Years of Daily Running Data</title>
      <link>http://localhost:1313/posts/clean_data/</link>
      <pubDate>Fri, 03 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/clean_data/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;script async src=&#34;https://www.googletagmanager.com/gtag/js?id=G-0NTZD30YVX&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;  window.dataLayer = window.dataLayer || [];&#xA;  function gtag(){dataLayer.push(arguments);}&#xA;  gtag(&#39;js&#39;, new Date());&#xA;&#xA;  gtag(&#39;config&#39;, &#39;G-0NTZD30YVX&#39;);&#xA;&lt;/script&gt;&#xA;&lt;/head&gt;&#xA;&lt;/html&gt;&#xA;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;For those of you that don&amp;rsquo;t know me personally, I managed to run collegiately for 6 years (thanks Covid?). Over that time I logged a lot of miles and a lot of Garmin activities. I still run quite a bit, but my barn burning days are behind me. I&amp;rsquo;d like to build a dashboard to get some insights to my running trends during that time as a sort of &amp;ldquo;last hoorah&amp;rdquo;, but sadly, a lot of my running data is missing and messy. I think cleaning it up will make for a great project to test my skills! Follow along here as I clean up and fill-in my running data using various techniques such as pulling outside data sources and training some ML models to predict missing values.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
